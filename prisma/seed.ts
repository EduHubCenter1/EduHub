import { PrismaClient } from "@prisma/client"
import bcrypt from "bcryptjs"
import { createSlug } from "../lib/utils"

const prisma = new PrismaClient()

async function main() {
  console.log("ðŸŒ± Starting database seed...")

  // Create admin users
  console.log("ðŸ‘¤ Creating admin users...")

  const superAdminPassword = await bcrypt.hash("admin123", 12)
  const classAdminPassword = await bcrypt.hash("class123", 12)

  const superAdmin = await prisma.user.upsert({
    where: { email: "admin@eduhub.com" },
    update: {},
    create: {
      name: "Super Admin",
      email: "admin@eduhub.com",
      role: "superAdmin",
      passwordHash: superAdminPassword,
    },
  })

  const classAdmin1 = await prisma.user.upsert({
    where: { email: "class1@eduhub.com" },
    update: {},
    create: {
      name: "Class Admin 1",
      email: "class1@eduhub.com",
      role: "classAdmin",
      passwordHash: classAdminPassword,
    },
  })

  const classAdmin2 = await prisma.user.upsert({
    where: { email: "class2@eduhub.com" },
    update: {},
    create: {
      name: "Class Admin 2",
      email: "class2@eduhub.com",
      role: "classAdmin",
      passwordHash: classAdminPassword,
    },
  })

  // Field 1: Sciences des DonnÃ©es, Big Data & IA
  console.log("ðŸ“š Creating Field 1: Sciences des DonnÃ©es, Big Data & IA...")

  const field1 = await prisma.field.upsert({
    where: { slug: "sciences-des-donnees-big-data-ia" },
    update: {},
    create: {
      name: "Sciences des DonnÃ©es, Big Data & IA",
      slug: "sciences-des-donnees-big-data-ia",
      description: "Formation spÃ©cialisÃ©e en science des donnÃ©es, intelligence artificielle et technologies big data",
    },
  })

  // Create 6 semesters for Field 1
  const field1Semesters = []
  for (let i = 1; i <= 6; i++) {
    const semester = await prisma.semester.upsert({
      where: { fieldId_number: { fieldId: field1.id, number: i } },
      update: {},
      create: {
        number: i,
        fieldId: field1.id,
      },
    })
    field1Semesters.push(semester)
  }

  // Field 1 Modules and Submodules
  const field1ModulesData = [
    // Semester 1
    [
      "MathÃ©matiques pour l'Intelligence Artificielle",
      "Analyse numÃ©rique matricielle et Statistique",
      "Algorithmique & Programmation",
      "RÃ©seaux informatique",
      "Architecture des ordinateurs et SystÃ¨mes d'exploitation",
      "Langues EtrangÃ¨res 1",
      "CompÃ©tences numÃ©riques et informatique",
    ],
    // Semester 2
    [
      "Recherche OpÃ©rationnelle",
      "Compilation et Informatique quantique",
      "POO en Java",
      "Technologies Web",
      "SystÃ¨mes d'Information et Bases de DonnÃ©es",
      "Langues EtrangÃ¨res 2",
      "CompÃ©tences artistiques et culturelles",
      "Stage",
    ],
    // Semester 3
    [
      "Structures de donnÃ©es avancÃ©e",
      "Architecture Logicielle et UML",
      "Fondements du Big Data",
      "Intelligence Artificielle I: Machine Learning",
      "Bases de donnÃ©es NOSQL",
      "Langues EtrangÃ©res 3",
      "Technologies de l'intelligence artificielle",
    ],
    // Semester 4
    [
      "SystÃ¨mes dÃ©cisionnels",
      "Intelligence Artificielle II: Deep Learning",
      "Computer Vision et Generative IA",
      "IoT et Cloud computing",
      "DÃ©veloppement mobile et Metaverse",
      "Langues EtrangÃ¨res 4",
      "Gestion de projets et d'entreprises",
      "Stage",
    ],
    // Semester 5
    [
      "Big Data AvancÃ©es",
      "Traitement du langage naturel (NLP)",
      "Programmation et architecture ParallÃ¨le",
      "Blockchaine et CybersÃ©curitÃ©",
      "SystÃ¨mes embarquÃ©s et Robotique",
      "Langues EtrangÃ¨res 5",
      "CompÃ©tences de vie et personnelles",
    ],
    // Semester 6
    ["Projet de fin d'Ã©tudes (PFE)"],
  ]

  for (let semesterIndex = 0; semesterIndex < 6; semesterIndex++) {
    const semester = field1Semesters[semesterIndex]
    const modules = field1ModulesData[semesterIndex]

    for (const moduleName of modules) {
      const moduleSlug = createSlug(moduleName)
      const module = await prisma.module.upsert({
        where: { semesterId_slug: { semesterId: semester.id, slug: moduleSlug } },
        update: {},
        create: {
          name: moduleName,
          slug: moduleSlug,
          semesterId: semester.id,
        },
      })

      // Create submodules for each module
      const submoduleNames = ["Partie 1", "Partie 2", "Travaux Pratiques"]
      for (const submoduleName of submoduleNames) {
        const submoduleSlug = createSlug(submoduleName)
        const submodule = await prisma.submodule.upsert({
          where: { moduleId_slug: { moduleId: module.id, slug: submoduleSlug } },
          update: {},
          create: {
            name: submoduleName,
            slug: submoduleSlug,
            moduleId: module.id,
          },
        })

        // Create sample resources
        if (submoduleName === "Partie 1") {
          await prisma.resource.upsert({
            where: { id: `${module.id}-${submodule.id}-course` },
            update: {},
            create: {
              id: `${module.id}-${submodule.id}-course`,
              title: `Cours ${moduleName}`,
              type: "course",
              description: `Support de cours pour ${moduleName}`,
              fileUrl: `fake-files/course-${moduleSlug}.pdf`,
              fileExt: "pdf",
              mimeType: "application/pdf",
              sizeBytes: 1024000,
              sha256: `fake-hash-${module.id}-${submodule.id}-course`,
              submoduleId: submodule.id,
              uploadedByUserId: superAdmin.id,
            },
          })
        }
      }
    }
  }

  // Field 2: SÃ©curitÃ© IT et Confiance NumÃ©rique
  console.log("ðŸ”’ Creating Field 2: SÃ©curitÃ© IT et Confiance NumÃ©rique...")

  const field2 = await prisma.field.upsert({
    where: { slug: "securite-it-et-confiance-numerique" },
    update: {},
    create: {
      name: "SÃ©curitÃ© IT et Confiance NumÃ©rique",
      slug: "securite-it-et-confiance-numerique",
      description: "Formation spÃ©cialisÃ©e en cybersÃ©curitÃ© et confiance numÃ©rique",
    },
  })

  // Create 6 semesters for Field 2
  const field2Semesters = []
  for (let i = 1; i <= 6; i++) {
    const semester = await prisma.semester.upsert({
      where: { fieldId_number: { fieldId: field2.id, number: i } },
      update: {},
      create: {
        number: i,
        fieldId: field2.id,
      },
    })
    field2Semesters.push(semester)
  }

  // Field 2 Modules
  const field2ModulesData = [
    // Semester 1
    [
      "MathÃ©matiques appliquÃ©es",
      "Architecture des ordinateurs et SystÃ¨mes d'exploitation",
      "Algorithmes et POO en Java",
      "Structures de donnÃ©es et Python",
      "RÃ©seaux informatique",
      "Langues EtrangÃ¨res 1",
      "CompÃ©tences numÃ©riques et informatiques",
    ],
    // Semester 2
    [
      "Recherche OpÃ©rationnelle",
      "Cryptographie appliquÃ©e et Informatique quantique",
      "Technologies WEB et Bases de donnÃ©es",
      "SystÃ¨mes embarquÃ©s et Cloud computing",
      "Architecture Logicielle et UML",
      "Langues EtrangÃ¨res 2",
      "CompÃ©tences artistiques et culturelles",
      "Stage",
    ],
    // Semester 3
    [
      "Introduction Ã  la sÃ©curitÃ© des systÃ¨mes d'information",
      "SÃ©curitÃ© des rÃ©seaux",
      "SÃ©curitÃ© des systÃ¨mes d'exploitation",
      "SÃ©curitÃ© des bases de donnÃ©es & SDLC",
      "Droit des TIC et Gouvernance des SI",
      "Langues EtrangÃ¨res 3",
      "Technologies de l'intelligence artificielle",
    ],
    // Semester 4
    [
      "Audit de la sÃ©curitÃ© des systÃ¨mes d'information",
      "Data Mining et Big Data",
      "Intelligence Artificielle et applications Ã  la cybersÃ©curitÃ©",
      "Architecture et sÃ©curitÃ© des systÃ¨mes complexes",
      "Ethical hacking et test d'intrusion",
      "Langues EtrangÃ¨res 4",
      "Gestion de projets et d'entreprises",
      "Stage",
    ],
    // Semester 5
    [
      "Malware Analysis & Digital investigation",
      "Incident handling",
      "SÃ©curitÃ© des applications WEB et des applications Mobiles",
      "SÃ©curitÃ© de la virtualisation et du Cloud computing",
      "Gouvernance de la sÃ©curitÃ© des SI",
      "Langues EtrangÃ¨res 5",
      "CompÃ©tences de vie et personnelles",
    ],
    // Semester 6
    ["Projet de fin d'Ã©tudes (PFE)"],
  ]

  for (let semesterIndex = 0; semesterIndex < 6; semesterIndex++) {
    const semester = field2Semesters[semesterIndex]
    const modules = field2ModulesData[semesterIndex]

    for (const moduleName of modules) {
      const moduleSlug = createSlug(moduleName)
      const module = await prisma.module.upsert({
        where: { semesterId_slug: { semesterId: semester.id, slug: moduleSlug } },
        update: {},
        create: {
          name: moduleName,
          slug: moduleSlug,
          semesterId: semester.id,
        },
      })

      // Create submodules
      const submoduleNames = ["ThÃ©orie", "Pratique", "Ã‰valuation"]
      for (const submoduleName of submoduleNames) {
        const submoduleSlug = createSlug(submoduleName)
        await prisma.submodule.upsert({
          where: { moduleId_slug: { moduleId: module.id, slug: submoduleSlug } },
          update: {},
          create: {
            name: submoduleName,
            slug: submoduleSlug,
            moduleId: module.id,
          },
        })
      }
    }
  }

  // Field 3: Management et Gouvernance des SystÃ¨mes d'Information
  console.log("ðŸ’¼ Creating Field 3: Management et Gouvernance des SystÃ¨mes d'Information...")

  const field3 = await prisma.field.upsert({
    where: { slug: "management-et-gouvernance-des-systemes-dinformation" },
    update: {},
    create: {
      name: "Management et Gouvernance des SystÃ¨mes d'Information",
      slug: "management-et-gouvernance-des-systemes-dinformation",
      description: "Formation en management et gouvernance des systÃ¨mes d'information",
    },
  })

  // Create 6 semesters for Field 3
  const field3Semesters = []
  for (let i = 1; i <= 6; i++) {
    const semester = await prisma.semester.upsert({
      where: { fieldId_number: { fieldId: field3.id, number: i } },
      update: {},
      create: {
        number: i,
        fieldId: field3.id,
      },
    })
    field3Semesters.push(semester)
  }

  // Field 3 Modules
  const field3ModulesData = [
    // Semester 1
    [
      "MathÃ©matiques AppliquÃ©es",
      "RÃ©seaux et Administration des systÃ¨mes",
      "Algorithmique et Programmation",
      "Architecture des ordinateurs et SystÃ¨mes d'exploitation",
      "StratÃ©gie d'entreprise & SI",
      "Langues EtrangÃ¨res 1",
      "CompÃ©tences numÃ©riques et informatiques",
    ],
    // Semester 2
    [
      "Recherche OpÃ©rationnelle",
      "SystÃ¨mes d'Information et Bases de DonnÃ©es Relationnelles",
      "Structures de donnÃ©es avancÃ©e",
      "POO en Java",
      "Technologie Web",
      "Langues EtrangÃ¨res 2",
      "CompÃ©tences artistiques et culturelles",
      "Stage",
    ],
    // Semester 3
    [
      "Administration des Bases de donnÃ©es AvancÃ©es",
      "SystÃ¨mes d'Information DistribuÃ©s",
      "Audit des SI",
      "Progiciels de gestion intÃ©grÃ©e ERP",
      "Gestion de projet et GÃ©nie logiciel",
      "Langues EtrangÃ¨res 3",
      "Technologies de l'intelligence artificielle",
    ],
    // Semester 4
    [
      "SystÃ¨mes dÃ©cisionnels",
      "Gouvernance et Urbanisation des SI",
      "SÃ©curitÃ© des SI",
      "Cloud Computing et IoT",
      "DÃ©veloppement mobile",
      "Langues EtrangÃ¨res 4",
      "Gestion de projets et d'entreprises",
      "Stage",
    ],
    // Semester 5
    [
      "MÃ©thodes Agile de conception",
      "Blockchaine et applications",
      "Intelligence Artificielle",
      "Big Data et NOSQL",
      "IngÃ©nierie logicielle, QualitÃ©, Test et IntÃ©gration",
      "Langues EtrangÃ¨res 5",
      "CompÃ©tences de vie et personnelles",
    ],
    // Semester 6
    ["Projet de fin d'Ã©tudes (PFE)"],
  ]

  for (let semesterIndex = 0; semesterIndex < 6; semesterIndex++) {
    const semester = field3Semesters[semesterIndex]
    const modules = field3ModulesData[semesterIndex]

    for (const moduleName of modules) {
      const moduleSlug = createSlug(moduleName)
      const module = await prisma.module.upsert({
        where: { semesterId_slug: { semesterId: semester.id, slug: moduleSlug } },
        update: {},
        create: {
          name: moduleName,
          slug: moduleSlug,
          semesterId: semester.id,
        },
      })

      // Create submodules
      const submoduleNames = ["Introduction", "Approfondissement", "Projet"]
      for (const submoduleName of submoduleNames) {
        const submoduleSlug = createSlug(submoduleName)
        await prisma.submodule.upsert({
          where: { moduleId_slug: { moduleId: module.id, slug: submoduleSlug } },
          update: {},
          create: {
            name: submoduleName,
            slug: submoduleSlug,
            moduleId: module.id,
          },
        })
      }
    }
  }
  console.log("ðŸ’» Creating Field 4: IngÃ©nierie Logicielle...")

const field4 = await prisma.field.upsert({
  where: { slug: "ingenierie-logicielle" },
  update: {},
  create: {
    name: "IngÃ©nierie Logicielle",
    slug: "ingenierie-logicielle",
    description: "Concentre sur la conception, le dÃ©veloppement et la maintenance de logiciels de qualitÃ©, en appliquant des mÃ©thodes rigoureuses pour crÃ©er des solutions fiables, Ã©volutives et adaptÃ©es aux besoins des utilisateurs.",
  },
})

// Create 6 semesters for Field 4
const field4Semesters = []
for (let i = 1; i <= 6; i++) {
  const semester = await prisma.semester.upsert({
    where: { fieldId_number: { fieldId: field4.id, number: i } },
    update: {},
    create: {
      number: i,
      fieldId: field4.id,
    },
  })
  field4Semesters.push(semester)
}

// Field 4 Modules
const field4ModulesData = [
  // Semester 1
  [
    "MathÃ©matiques AppliquÃ©es",
    "Algorithmes et Programmation",
    "POO en Java",
    "RÃ©seaux informatique",
    "Architecture des ordinateurs et SystÃ¨mes dâ€™exploitation",
    "Langues EtrangÃ¨res 1",
    "CompÃ©tences numÃ©riques et informatique",
  ],
  // Semester 2
  [
    "Recherche OpÃ©rationnelle",
    "Administration rÃ©seaux et systÃ¨mes",
    "Structures de donnÃ©es avancÃ©e",
    "Technologies Web",
    "SystÃ¨mes dâ€™Information et Bases de DonnÃ©es Relationnelles",
    "Langues EtrangÃ¨res 2",
    "CompÃ©tences artistiques et culturelles",
    "Stage",
  ],
  // Semester 3
  [
    "Programmation Python",
    "Compilation et Informatique quantique",
    "POO en C++ et Applications",
    "DÃ©veloppement WEB JEE",
    "Gestion de projet et GÃ©nie logiciel",
    "Langues EtrangÃ¨res 3",
    "Technologies de lâ€™intelligence artificielle",
  ],
  // Semester 4
  [
    "SystÃ¨mes dÃ©cisionnels",
    "IngÃ©nierie logicielle, QualitÃ©, Test et IntÃ©gration",
    "Intelligence Artificielle",
    "DÃ©veloppement mobile et Metaverse",
    "IoT et Cloud computing",
    "Langues EtrangÃ¨res 4",
    "Gestion de projets et dâ€™entreprises",
    "Stage",
  ],
  // Semester 5
  [
    "Enterprise Resource Planning ERP",
    "Big Data et NoSQL",
    "Blockchaine et SÃ©curitÃ©",
    "Vision par ordinateur",
    "Tendances et Ã©volutions IT",
    "Langues EtrangÃ¨res 5",
    "CompÃ©tences de vie et personnelles",
  ],
  // Semester 6
  [
    "Projet de fin dâ€™Ã©tudes (PFE)",
  ],
]

for (let semesterIndex = 0; semesterIndex < 6; semesterIndex++) {
  const semester = field4Semesters[semesterIndex]
  const modules = field4ModulesData[semesterIndex]

  for (const moduleName of modules) {
    const moduleSlug = createSlug(moduleName)
    const module = await prisma.module.upsert({
      where: { semesterId_slug: { semesterId: semester.id, slug: moduleSlug } },
      update: {},
      create: {
        name: moduleName,
        slug: moduleSlug,
        semesterId: semester.id,
      },
    })

    // Create submodules
    const submoduleNames = ["Partie 1", "Partie 2", "Travaux Pratiques"]
    for (const submoduleName of submoduleNames) {
      const submoduleSlug = createSlug(submoduleName)
      await prisma.submodule.upsert({
        where: { moduleId_slug: { moduleId: module.id, slug: submoduleSlug } },
        update: {},
        create: {
          name: submoduleName,
          slug: submoduleSlug,
          moduleId: module.id,
        },
      })
    }
  }
}

  // Create admin scopes for class admins
  console.log("ðŸ”‘ Creating admin scopes...")

  // ClassAdmin1 manages Field1 Semesters 1-3
  for (let semester = 1; semester <= 3; semester++) {
    await prisma.adminScope.upsert({
      where: {
        userId_fieldId_semesterNumber: { userId: classAdmin1.id, fieldId: field1.id, semesterNumber: semester },
      },
      update: {},
      create: {
        userId: classAdmin1.id,
        fieldId: field1.id,
        semesterNumber: semester,
      },
    })
  }

  // ClassAdmin2 manages Field2 Semesters 1-2
  for (let semester = 1; semester <= 2; semester++) {
    await prisma.adminScope.upsert({
      where: {
        userId_fieldId_semesterNumber: { userId: classAdmin2.id, fieldId: field2.id, semesterNumber: semester },
      },
      update: {},
      create: {
        userId: classAdmin2.id,
        fieldId: field2.id,
        semesterNumber: semester,
      },
    })
  }

  console.log("âœ… Database seeded successfully!")
  console.log("\nðŸ“‹ Login credentials:")
  console.log("Super Admin: admin@eduhub.com / admin123")
  console.log("Class Admin 1: class1@eduhub.com / class123 (Field 1, Semesters 1-3)")
  console.log("Class Admin 2: class2@eduhub.com / class123 (Field 2, Semesters 1-2)")
}

main()
  .then(async () => {
    await prisma.$disconnect()
  })
  .catch(async (e) => {
    console.error(e)
    await prisma.$disconnect()
    process.exit(1)
  })
